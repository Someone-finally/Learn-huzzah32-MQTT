[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "C:\Espressif\frameworks\esp-idf-v5.0.1\examples\Hobby projects\Esp-project\MQTT-test\huzzah32-MQTT\build\bootloader\esp-idf\esptool_py" && c:\Espressif\frameworks\esp-idf-v5.0.1\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/Esp-project/MQTT-test/huzzah32-MQTT/build/bootloader/bootloader.bin""
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable huzzah32-MQTT.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/Esp-project/MQTT-test/huzzah32-MQTT/build/huzzah32-MQTT.bin
[7/8] cmd.exe /C "cd /D "C:\Espressif\frameworks\esp-idf-v5.0.1\examples\Hobby projects\Esp-project\MQTT-test\huzzah32-MQTT\build\esp-idf\esptool_py" && c:\Espressif\frameworks\esp-idf-v5.0.1\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/Esp-project/MQTT-test/huzzah32-MQTT/build/partition_table/partition-table.bin" "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/Esp-project/MQTT-test/huzzah32-MQTT/build/huzzah32-MQTT.bin""
huzzah32-MQTT.bin binary size 0xcd1a0 bytes. Smallest app partition is 0x100000 bytes. 0x32e60 bytes (20%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.1\components\esptool_py && C:\Espressif\frameworks\esp-idf-v5.0.1\tools\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0.1 -D SERIAL_TOOL=c:/Espressif/frameworks/esp-idf-v5.0.1/tools/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/Esp-project/MQTT-test/huzzah32-MQTT/build" -P C:/Espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 huzzah32-MQTT.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM4
Connecting.........
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 7c:87:ce:f4:8d:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000ddfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16459...
Writing at 0x00001000... (50 %)
Writing at 0x000076ac... (100 %)
Wrote 26384 bytes (16459 compressed) at 0x00001000 in 0.8 seconds (effective 265.9 kbit/s)...
Hash of data verified.
Compressed 840096 bytes to 539034...
Writing at 0x00010000... (3 %)
Writing at 0x0001c866... (6 %)
Writing at 0x00022de3... (9 %)
Writing at 0x00028d78... (12 %)
Writing at 0x00034560... (15 %)
Writing at 0x0003bcde... (18 %)
Writing at 0x00041901... (21 %)
Writing at 0x000472fa... (24 %)
Writing at 0x0004cbf0... (27 %)
Writing at 0x000525f2... (30 %)
Writing at 0x00057e99... (33 %)
Writing at 0x0005d877... (36 %)
Writing at 0x00063e66... (39 %)
Writing at 0x000699bf... (42 %)
Writing at 0x0006f2ed... (45 %)
Writing at 0x000746d4... (48 %)
Writing at 0x0007995d... (51 %)
Writing at 0x0007edb9... (54 %)
Writing at 0x000842ca... (57 %)
Writing at 0x000899b9... (60 %)
Writing at 0x0008f168... (63 %)
Writing at 0x00094eaa... (66 %)
Writing at 0x0009a67a... (69 %)
Writing at 0x0009ff03... (72 %)
Writing at 0x000a5724... (75 %)
Writing at 0x000aaf81... (78 %)
Writing at 0x000b07a2... (81 %)
Writing at 0x000b629a... (84 %)
Writing at 0x000bbc78... (87 %)
Writing at 0x000c47f0... (90 %)
Writing at 0x000ccc97... (93 %)
Writing at 0x000d2a37... (96 %)
Writing at 0x000d82d5... (100 %)
Wrote 840096 bytes (539034 compressed) at 0x00010000 in 13.1 seconds (effective 513.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 377.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
